package router

import (
	"github.com/SuperH-0630/cat-shop-back/src/config"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/global/class/getclasslst"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/global/system/getconfig"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/global/system/getxieyi"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/global/wupin/gethotwupin"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/global/wupin/getsearch"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/global/wupin/getwupin"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/bag/addbag"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/bag/getbaglst"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/buy/fahuo/daohuo"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/buy/fahuo/fahuochangeuser"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/buy/fahuo/fahuoquxiaoshenqing"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/buy/getter/getbuyrecord"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/buy/getter/getbuyrecordlst"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/buy/getter/getbuyrecordlstbypage"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/buy/tuihuo/tuihuodengji"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/buy/tuihuo/tuihuoshenqing"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/edit/updateuseravtar"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/edit/updateuserinfo"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/edit/updateuserpassword"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/getter/getuserinfo"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/pay/bagpay"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/pay/newpay"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/secret/user/pay/repay"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/handler/test/secret/user/pay/testpay"
	"github.com/SuperH-0630/cat-shop-back/src/ginhttp/middleware"
	"github.com/gin-gonic/gin"
)

func InitRouter(engine *gin.Engine) {
	if !config.IsReady() {
		panic("config is not ready")
	}
	baseApi(engine)
}

func baseApi(engine *gin.Engine) {
	api := engine.Group(config.Config().Yaml.Http.BaseAPI)
	api.Use(middleware.XTokenMiddleware())
	apiV1(api)
}

func apiV1(baseApi *gin.RouterGroup) {
	api := baseApi.Group("/v1")
	globalApiV1(api)
	secretApiV1(api)
	testAPiV1(api)
}

func globalApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/gl")
	classApiV1(api)
	configApiV1(api)
	wupinApiV1(api)
	xieyiApiV1(api)
}

func configApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/cfg")
	api.GET("/i", getconfig.Handler)
}

func classApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/cls")
	api.GET("/lst", getclasslst.Handler)
}

func wupinApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/wp")
	api.GET("/i", getwupin.Handler)
	api.GET("/lst", getsearch.Handler)
	api.GET("/lst/h", gethotwupin.Handler)
	api.GET("/lst/s", getsearch.Handler)
}

func xieyiApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/xy")
	api.GET("/i", getxieyi.Handler)
}

func secretApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/sr")
	api.Use(middleware.MustXTokenMiddleware())
	adminApiV1(api)
	userApiV1(api)
}

func userApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/ur")
	api.Use(middleware.MustAdminXTokenMiddleware())
	userEditApiV1(api)
	userBuyRecordApiV1(api)
	userBagApiV1(api)

	api.GET("/i", getuserinfo.Handler)
}

func userEditApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/ed")
	api.Use(middleware.MustAdminXTokenMiddleware())

	api.POST("/i", updateuserinfo.Handler)
	api.POST("/p", updateuserpassword.Handler)
	api.POST("/a", updateuseravtar.Handler)
}

func userBuyRecordApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/br")
	api.Use(middleware.MustAdminXTokenMiddleware())
	userFahuoApiV1(api)
	userDaohuoApiV1(api)
	userTuihuoApiV1(api)
	userPayApiV1(api)

	api.GET("/i", getbuyrecord.Handler)
	api.GET("/lst", getbuyrecordlst.Handler)
	api.GET("/lst/i", getbuyrecordlst.Handler)
	api.GET("/lst/p", getbuyrecordlstbypage.Handler)
}

func userFahuoApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/fho")
	api.Use(middleware.MustAdminXTokenMiddleware())

	api.POST("/chu", fahuochangeuser.Handler)
	api.POST("/qx", fahuoquxiaoshenqing.Handler)
}

func userDaohuoApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/dho")
	api.Use(middleware.MustAdminXTokenMiddleware())

	api.POST("/cfm", daohuo.Handler)
}

func userTuihuoApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/dho")
	api.Use(middleware.MustAdminXTokenMiddleware())

	api.POST("/sq", tuihuoshenqing.Handler)
	api.POST("/dj", tuihuodengji.Handler)
}

func userPayApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/py")
	api.Use(middleware.MustAdminXTokenMiddleware())

	api.POST("/n", newpay.Handler)
	api.POST("/b", bagpay.Handler)
	api.POST("/r", repay.Handler)
}

func userBagApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/bg")
	api.Use(middleware.MustAdminXTokenMiddleware())

	api.POST("/ad", addbag.Handler)
	api.GET("/lst", getbaglst.Handler)
}

func adminApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/ad")
	api.Use(middleware.MustAdminXTokenMiddleware())
	rootAdminApiV1(api)
}

func rootAdminApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/rt")
	api.Use(middleware.MustRotAdminXTokenMiddleware())

	rootAdminConfigApiV1(api)
}

func rootAdminConfigApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/cfg")
	api.Use(middleware.MustRotAdminXTokenMiddleware())
}

func testAPiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/ts")
	api.Use(middleware.TestApiMiddleware())

	testGlobalApi(api)
	testSecretApiV1(api)
}

func testGlobalApi(apiV1 *gin.RouterGroup) {
	_ = apiV1.Group("/gl")
}

func testSecretApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/sr")
	api.Use(middleware.MustXTokenMiddleware())
	testUserApiV1(api)
}

func testUserApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/ur")
	api.Use(middleware.MustAdminXTokenMiddleware())
	testUserPayApiV1(api)
}

func testUserPayApiV1(apiV1 *gin.RouterGroup) {
	api := apiV1.Group("/py")

	api.POST("/p", testpay.Handler)
}
